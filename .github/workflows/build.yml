name: build

on:
  push:
    paths:
      - 'src/**'
      - '**/build.yml'

jobs:
  PIO:
    strategy:
      fail-fast: false
      matrix:
        example:
          - "hello"
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.9]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio/archive/develop.zip

      - name: template build
        working-directory: src/template
        run: |
          platformio run -d ${{ matrix.example }}

  IDF:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Install ESP-IDF
        uses: Qful/espidf-action@master
        with:
          esp_idf_version: 'latest'

      - name: Build Rainbow-LED-Strip
        working-directory: src/demo/Rainbow-LED-Strip
        run: |
          source ~/esp/esp-idf/export.sh
          idf.py build

      - name: Build esp32c3_sandbox
        working-directory: src/demo/esp32c3_sandbox
        run: |
          source ~/esp/esp-idf/export.sh
          idf.py build
          idf.py reconfigure
          idf.py app
          idf.py size

      # - name: Create the code library
      #   working-directory: src/demo/BoardManager
      #   run: |
      #     mkdir -p "${{ github.workspace }}/lib/ESP32"
      #     cd "${{ github.workspace }}/lib/ESP32"
      #     git clone --depth 1 https://github.com/CalinRadoni/ESP32BoardManager.git
      #     git clone --depth 1 https://github.com/CalinRadoni/ESP32SimpleOTA.git
      #     git clone --depth 1 https://github.com/CalinRadoni/ESP32HAL.git

      # - name: Build BoardManager
      #   uses: CalinRadoni/esp-idf-v4-container-action@v4.1
      #   id: idf_build
      #   with:
      #     entrypoint: /github/workspace/${{ env.app-path }}/action-build.sh

      # - name: Compute SHA256 for bin and elf files
      #   if: steps.idf_build.outputs.result == 0
      #   run: |
      #     fileE=$(find "${{ github.workspace }}/${{ env.app-path }}/build" -maxdepth 1 -type f -name '*.elf')
      #     fileB=${fileE%.elf}.bin
      #     declare -a files
      #     files=("$fileE" "$fileB")
      #     for file in "${files[@]}"; do
      #       hash=$(sha256sum -b "$file")
      #       stat -c"${hash%% *} ${file##*/} %s" "$file"
      #     done
